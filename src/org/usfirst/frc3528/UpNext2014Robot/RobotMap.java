// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc3528.UpNext2014Robot;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.can.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANJaguar mecanumDriveCANJaguar1;
    public static CANJaguar mecanumDriveCANJaguar2;
    public static CANJaguar mecanumDriveCANJaguar3;
    public static CANJaguar mecanumDriveCANJaguar4;
    public static RobotDrive mecanumDriveRobotDrive41;
    public static Gyro mecanumDriveGyro1;
    public static Compressor catapultCompressor;
    public static Solenoid catapultSolenoid1;
    public static Solenoid catapultSolenoid2;
    public static Solenoid catapultSolenoid3;
    public static Solenoid catapultSolenoid4;
    public static Solenoid catapultSolenoid5;
    public static Solenoid catapultSolenoid6;
    public static Relay pickerUpperSpike1;
    public static SpeedController pickerUpperTalon;
    public static DigitalInput pickerUpperUpperLimit;
    public static DigitalInput pickerUpperLowerLimit;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static final double SENSITIVITY = .5;
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        try { 
            mecanumDriveCANJaguar1 = new CANJaguar(2);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        try { 
            mecanumDriveCANJaguar2 = new CANJaguar(3);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        try { 
            mecanumDriveCANJaguar3 = new CANJaguar(4);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        try { 
            mecanumDriveCANJaguar4 = new CANJaguar(5);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        mecanumDriveRobotDrive41 = new RobotDrive(mecanumDriveCANJaguar1, mecanumDriveCANJaguar2,
              mecanumDriveCANJaguar3, mecanumDriveCANJaguar4);
	
        mecanumDriveRobotDrive41.setSafetyEnabled(true);
        mecanumDriveRobotDrive41.setExpiration(0.1);
        mecanumDriveRobotDrive41.setSensitivity(0.5);
        mecanumDriveRobotDrive41.setMaxOutput(1.0);
        mecanumDriveRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        mecanumDriveRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        mecanumDriveGyro1 = new Gyro(1, 1);
	LiveWindow.addSensor("MecanumDrive", "Gyro 1", mecanumDriveGyro1);
        mecanumDriveGyro1.setSensitivity(0.007);
        catapultCompressor = new Compressor(1, 1, 1, 1);
	
        
        catapultSolenoid1 = new Solenoid(1, 1);
	LiveWindow.addActuator("Catapult", "Solenoid 1", catapultSolenoid1);
        
        catapultSolenoid2 = new Solenoid(1, 2);
	LiveWindow.addActuator("Catapult", "Solenoid 2", catapultSolenoid2);
        
        catapultSolenoid3 = new Solenoid(1, 3);
	LiveWindow.addActuator("Catapult", "Solenoid 3", catapultSolenoid3);
        
        catapultSolenoid4 = new Solenoid(1, 4);
	LiveWindow.addActuator("Catapult", "Solenoid 4", catapultSolenoid4);
        
        catapultSolenoid5 = new Solenoid(1, 5);
	LiveWindow.addActuator("Catapult", "Solenoid 5", catapultSolenoid5);
        
        catapultSolenoid6 = new Solenoid(1, 6);
	LiveWindow.addActuator("Catapult", "Solenoid 6", catapultSolenoid6);
        
        pickerUpperSpike1 = new Relay(1, 2);
	LiveWindow.addActuator("PickerUpper", "Spike 1", pickerUpperSpike1);
        
        pickerUpperTalon = new Talon(1, 1);
	LiveWindow.addActuator("PickerUpper", "Talon", (Talon) pickerUpperTalon);
        
        pickerUpperUpperLimit = new DigitalInput(1, 2);
	LiveWindow.addSensor("PickerUpper", "UpperLimit", pickerUpperUpperLimit);
        
        pickerUpperLowerLimit = new DigitalInput(1, 3);
	LiveWindow.addSensor("PickerUpper", "LowerLimit", pickerUpperLowerLimit);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
